<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Summary on Not a Peeker of Nature</title>
    <link>https://astudentfromsustech.github.io/tags/summary/</link>
    <description>Recent content in Summary on Not a Peeker of Nature</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://astudentfromsustech.github.io/tags/summary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Topics summary</title>
      <link>https://astudentfromsustech.github.io/posts/5_topics_summary/</link>
      <pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://astudentfromsustech.github.io/posts/5_topics_summary/</guid>
      <description>&lt;h2 id=&#34;basis-of-3d-genomics&#34;&gt;#Basis of 3D genomics&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Introduction&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Scripts summary</title>
      <link>https://astudentfromsustech.github.io/posts/c_scripts_summary/</link>
      <pubDate>Wed, 17 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://astudentfromsustech.github.io/posts/c_scripts_summary/</guid>
      <description>&lt;p&gt;To reuse some scripts, here is a summary for myself organized by topics&lt;/p&gt;&#xA;&lt;h2 id=&#34;3d-genomics&#34;&gt;#3D genomics&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-from-pairedgz-to-hic&#34;&gt;1. from .paired.gz to hic&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/usr/bin/env bash&#xA;set -euo pipefail&#xA;&#xA;# ─── User settings ──────────────────────────────────────────────────────────&#xA;data_dir=&amp;#34;../data&amp;#34;&#xA;sample=&amp;#34;HAP-WT&amp;#34;&#xA;&#xA;chromsizes=&amp;#34;../annotations/hg38.chrom.sizes&amp;#34;&#xA;build=&amp;#34;hg38&amp;#34;&#xA;juicer_tools=&amp;#34;../tools/juicer_tools.2.20.00.jar&amp;#34;&#xA;&#xA;merged_pairs=&amp;#34;${data_dir}/${sample}_330M.pairs.gz&amp;#34;&#xA;sorted_merged=&amp;#34;${merged_pairs%.pairs.gz}.sorted.pairs.gz&amp;#34;&#xA;dedup_pairs=&amp;#34;${data_dir}/${sample}_330M.nodups.pairs.gz&amp;#34;&#xA;sorted_dedup=&amp;#34;${dedup_pairs%.pairs.gz}.sorted.pairs.gz&amp;#34;&#xA;pre_pairs=&amp;#34;${data_dir}/${sample}_330M.forPre.pairs.gz&amp;#34;&#xA;hic_file=&amp;#34;${data_dir}/${sample}_330M.hic&amp;#34;&#xA;&#xA;# comma‐sep list of resolutions (no spaces!)&#xA;res_list=&amp;#34;2500000,1000000,500000,250000,100000,50000,25000,10000,5000,1000&amp;#34;&#xA;&#xA;threads=12&#xA;# ────────────────────────────────────────────────────────────────────────────&#xA;&#xA;echo &amp;#34;2 sort merged pairs&amp;#34;&#xA;pairtools sort --nproc $threads -o &amp;#34;$sorted_merged&amp;#34; &amp;#34;$merged_pairs&amp;#34;&#xA;&#xA;echo &amp;#34;3 global deduplication&amp;#34;&#xA;pairtools dedup --nproc-in  $threads --nproc-out $threads --output &amp;#34;$dedup_pairs&amp;#34; &amp;#34;$sorted_merged&amp;#34;&#xA;&#xA;echo &amp;#34;4 sort deduplicated pairs&amp;#34;&#xA;pairtools sort --nproc $threads -o &amp;#34;$sorted_dedup&amp;#34; &amp;#34;$dedup_pairs&amp;#34;&#xA;&#xA;echo &amp;#34;5 prepare for juicebox pre:&amp;#34;&#xA;gunzip -c &amp;#34;$sorted_dedup&amp;#34; | grep -E &amp;#39;^(## pairs format|^#columns|^[^#])&amp;#39; | gzip -c &amp;gt; &amp;#34;$pre_pairs&amp;#34;&#xA;&#xA;echo &amp;#34;6 building multi-res .hic&amp;#34;&#xA;java -Xmx16g -jar &amp;#34;$juicer_tools&amp;#34; pre -t $threads -r &amp;#34;$res_list&amp;#34; &amp;#34;$pre_pairs&amp;#34; &amp;#34;$hic_file&amp;#34; &amp;#34;$build&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;binformatics&#34;&gt;#Binformatics&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-change-bedgraph-to-tdf-for-igv-visualization&#34;&gt;1. change bedgraph to tdf for igv visualization&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# conda activate tools_igvtools&#xA;&#xA;genome=&amp;#34;hg19&amp;#34;&#xA;src_dir=&amp;#34;../3_prepare_macs2_peaks_forIGV&amp;#34;&#xA;&#xA;for bg in &amp;#34;$src_dir&amp;#34;/*.bedgraph; do&#xA;  base=&amp;#34;${bg%.bedgraph}&amp;#34;&#xA;  echo ${base}&#xA;  tdf=${base}.tdf&#xA;&#xA;  igvtools toTDF ${bg} ${tdf} ${genome}&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-draw-plot-using-python&#34;&gt;2. draw plot using Python&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import pathlib as p&#xA;import numpy as np&#xA;import pandas as pd&#xA;&#xA;import matplotlib&#xA;# matplotlib.use(&amp;#39;Qt5Agg&amp;#39;)&#xA;# matplotlib.rcParams[&amp;#39;font.family&amp;#39;] = &amp;#39;Arial&amp;#39;&#xA;import matplotlib.pyplot as plt&#xA;plt.style.use(&amp;#39;ggplot&amp;#39;)&#xA;&#xA;from scipy.stats import pearsonr, spearmanr, gaussian_kde&#xA;&#xA;pd.set_option(&amp;#39;display.max_columns&amp;#39;, None)&#xA;pd.set_option(&amp;#39;display.max_rows&amp;#39;, None)&#xA;pd.set_option(&amp;#39;display.width&amp;#39;, 500)&#xA;&#xA;if __name__ == &amp;#39;__main__&amp;#39;:&#xA;    root = p.Path(__file__).absolute().parent&#xA;&#xA;    resolution = 10000&#xA;    src_dir = root.parent / f&amp;#39;data_2_cool_{resolution}_targetChroms_normalizeSmallest&amp;#39;&#xA;    dest_dir = root.parent / &amp;#39;result_scatterPlot_of_twoReplicates_allChroms_noLabels_withColorCode&amp;#39;&#xA;    dest_dir.mkdir(parents=True, exist_ok=True)&#xA;&#xA;    groups = [[&amp;#39;ctrl1&amp;#39;, &amp;#39;ctrl2&amp;#39;, &amp;#39;ctrl&amp;#39;, &amp;#39;#4D7731&amp;#39;]]&#xA;&#xA;    for group in groups:&#xA;        rep1 = group[0]&#xA;        rep2 = group[1]&#xA;        group_name = group[2]&#xA;        color_code = group[3]&#xA;        print(group_name)&#xA;        print(rep1)&#xA;        print(rep2)&#xA;        c1 = cooler.Cooler(str(src_dir / f&amp;#39;{rep1}_{resolution}_targetChroms_normalizeSmallest.cool&amp;#39;))&#xA;        c2 = cooler.Cooler(str(src_dir / f&amp;#39;{rep2}_{resolution}_targetChroms_normalizeSmallest.cool&amp;#39;))&#xA;&#xA;        matrix1_flat_raw = c1.matrix(balance=False)[:].flatten()&#xA;        matrix2_flat_raw = c2.matrix(balance=False)[:].flatten()&#xA;&#xA;        matrix1_flat, matrix2_flat = filter_zero_indices(matrix1_flat_raw, matrix2_flat_raw)&#xA;&#xA;        corr_pearson, p_pearson = pearsonr(matrix1_flat, matrix2_flat)&#xA;&#xA;        fig, ax = plt.subplots(figsize=(5, 5), dpi=300)&#xA;        ax.set_facecolor(&amp;#39;white&amp;#39;)&#xA;        for spine in ax.spines.values():&#xA;            spine.set_color(&amp;#39;black&amp;#39;)&#xA;            spine.set_linewidth(1)&#xA;&#xA;        plt.scatter(np.log10(matrix1_flat), np.log10(matrix2_flat), alpha=0.3, s=1.5, c=color_code)&#xA;        # plt.scatter(np.log2(matrix1_flat), np.log2(matrix2_flat), alpha=0.3, s=1.5, c=&amp;#39;black&amp;#39;)&#xA;        # sc = ax.scatter(x, y, c=z, s=1.5, alpha=0.3, cmap=&amp;#39;inferno&amp;#39;)&#xA;&#xA;        ax.set_xticks([1, 2, 3])&#xA;        ax.set_xticklabels([10, 100, 1000])&#xA;        ax.set_yticks([1, 2, 3])&#xA;        ax.set_yticklabels([10, 100, 1000])&#xA;&#xA;        # ax.set_xlabel(f&amp;#34;{group_name}_rep1&amp;#34;, fontsize=10)&#xA;        # ax.set_ylabel(f&amp;#34;{group_name}_rep2&amp;#34;, fontsize=10)&#xA;        ax.set_xlabel(f&amp;#34;&amp;#34;)&#xA;        ax.set_ylabel(f&amp;#34;&amp;#34;)&#xA;&#xA;        ax.set_title(f&amp;#34;&amp;#34;)&#xA;&#xA;        plt.savefig(dest_dir/f&amp;#39;{group_name}_resolution{resolution}_correlation_twoReps_allChroms_pearsonCorr{corr_pearson:.2f}_noLabels_withColorCode.png&amp;#39;, dpi=300)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Terminology summary</title>
      <link>https://astudentfromsustech.github.io/posts/a_terminology_summary/</link>
      <pubDate>Wed, 17 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://astudentfromsustech.github.io/posts/a_terminology_summary/</guid>
      <description>&lt;p&gt;To memorize some frequently used terminologies and their pronunciations, here is a summary organized by topics&lt;/p&gt;&#xA;&lt;h2 id=&#34;cell-biology&#34;&gt;#Cell biology&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-cell-cycle-and-chromosomes&#34;&gt;1. Cell cycle and chromosomes&lt;/h3&gt;&#xA;&lt;p&gt;mitosis /maɪˈtoʊsɪs/ 有丝分裂&lt;br&gt;&#xA;meiosis /maɪˈoʊsɪs/ 减数分裂&lt;br&gt;&#xA;amitosis /ˌæmaɪˈtoʊsɪs/ 无丝分裂&#xA;polyploid /ˈpɒlɪplɔɪd/ 多倍体&lt;br&gt;&#xA;diploid /ˈdɪplɔɪd/ 二倍体&lt;br&gt;&#xA;autopolyploid /ˌɔːtoʊˈpɒlɪplɔɪd/&#xA;allopolyploid /ˌæloʊˈpɒlɪplɔɪd/&#xA;heterozygosity /ˌhetərəʊzaɪˈɡɒsəti/ 杂合度；杂合性&lt;br&gt;&#xA;homozygosity /ˌhəʊməʊzaɪˈɡɒsəti/  纯合性；纯合度&lt;br&gt;&#xA;karyotype /ˈkær.i.oʊ.taɪp/ 核型&lt;/p&gt;&#xA;&lt;h2 id=&#34;genomics&#34;&gt;#Genomics&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-comparative-genomics-and-evolution&#34;&gt;1. Comparative genomics and evolution&lt;/h3&gt;&#xA;&lt;p&gt;synteny /ˈsɪntəni/ 共线性&lt;br&gt;&#xA;lineages /ˈlɪniɪdʒɪz/ 常指从共同祖先演化而来的连续种群或物种分支，比如“进化谱系”。&lt;br&gt;&#xA;synonymous substitutions /sɪˈnɒnɪməs ˌsʌbstɪˈtjuːʃənz/ 同义替换 或 同义突变&lt;br&gt;&#xA;paralogous genes /ˌpærəˈlɒɡəs dʒiːnz/ 旁系同源基因，指同一物种基因组中，由基因复制（gene duplication）事件产生的同源基因，这些基因在功能上可能相似，也可能已经分化。&lt;br&gt;&#xA;orthologous genes /ˈɔːrθəlɒɡəs dʒiːnz/ 直系同源基因，源自基因复制（duplication）事件，出现在同一物种基因组内。&lt;br&gt;&#xA;progenitors /prəˈdʒɛnɪtəz/ 祖先&lt;/p&gt;</description>
    </item>
    <item>
      <title>To do list</title>
      <link>https://astudentfromsustech.github.io/posts/b_todolist_summary/</link>
      <pubDate>Wed, 17 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://astudentfromsustech.github.io/posts/b_todolist_summary/</guid>
      <description>&lt;p&gt;To learn things systematiclly, here is a to do list for myself organized by topics&lt;/p&gt;&#xA;&lt;h2 id=&#34;bioinformatcis&#34;&gt;#Bioinformatcis&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-fa-and-gfa-data-format&#34;&gt;1. fa and gfa data format&lt;/h3&gt;&#xA;&lt;h3 id=&#34;1-washu-browser&#34;&gt;1. WashU Browser&lt;/h3&gt;&#xA;&lt;h3 id=&#34;1-stanford-cs224w-machine-learning-with-graphs--practice-with-pytorch-geometric&#34;&gt;1. Stanford CS224W (Machine Learning with Graphs) → practice with PyTorch Geometric&lt;/h3&gt;&#xA;&lt;h3 id=&#34;1-do-huggingface-course--learn-transformers--sequence-modeling-&#34;&gt;1. Do HuggingFace course → learn Transformers &amp;amp; sequence modeling (&lt;a href=&#34;https://huggingface.co/learn/llm-course/chapter1/1&#34;&gt;https://huggingface.co/learn/llm-course/chapter1/1&lt;/a&gt;)&lt;/h3&gt;&#xA;&lt;h3 id=&#34;2-hpc-at-univeristy&#34;&gt;2. HPC at univeristy&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;HPC Storage Summer School S^3&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Introduction to AlphaFold&lt;/em&gt;&#xA;09.09.25 09:00-13:00&#xA;&lt;a href=&#34;https://academy.gwdg.de/p/event.xhtml?id=68263d79298a9177e714d861&#34;&gt;https://academy.gwdg.de/p/event.xhtml?id=68263d79298a9177e714d861&lt;/a&gt;&lt;br&gt;&#xA;&lt;em&gt;Effectively Utilize AI Tools in Research&lt;/em&gt;&#xA;15.09.25 09:00-12:00&#xA;&lt;a href=&#34;https://academy.gwdg.de/p/event.xhtml?id=68264957298a9177e714d87b&#34;&gt;https://academy.gwdg.de/p/event.xhtml?id=68264957298a9177e714d87b&lt;/a&gt;&lt;br&gt;&#xA;&lt;em&gt;Deep Learning Bootcamp: Building and Deploying AI Models&lt;/em&gt;&#xA;16.-17.09.25 14:30-16:30&#xA;&lt;a href=&#34;https://academy.gwdg.de/p/event.xhtml?id=68263ed1298a9177e714d864&#34;&gt;https://academy.gwdg.de/p/event.xhtml?id=68263ed1298a9177e714d864&lt;/a&gt;&lt;br&gt;&#xA;&lt;em&gt;Deep Learning with GPU Cores&lt;/em&gt;&#xA;18.09.25 09:30-13:00&#xA;&lt;a href=&#34;https://academy.gwdg.de/p/event.xhtml?id=68263caa298a9177e714d860&#34;&gt;https://academy.gwdg.de/p/event.xhtml?id=68263caa298a9177e714d860&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
